import 'package:freezed_annotation/freezed_annotation.dart';
import 'package:fresh_dio/fresh_dio.dart';
import 'package:hive/hive.dart';

part 'token.freezed.dart';
part 'token.g.dart';

/// An immutable class representing an OAuth 2.0 token.
///
/// This class is annotated with the `@freezed` and `@HiveType` annotations,
/// allowing for automatic code generation of necessary methods and
/// serialization for use in Flutter projects, especially when working with Hive
/// database.
///
/// Example:
/// ```dart
/// final token = Token(
///   accessToken: 'sampleAccessToken',
///   expiresIn: 3600,
///   refreshToken: 'sampleRefreshToken',
///   scope: 'read write',
/// );
/// ```
@freezed
@HiveType(typeId: 0)
class Token with _$Token implements OAuth2Token {
  /// Factory constructor to create an instance of [Token].
  ///
  /// The constructor is annotated with `@freezed` and automatically generates
  /// the necessary boilerplate code for creating immutable instances.
  const factory Token({
    @JsonKey(name: 'access_token') @HiveField(0) required String accessToken,
    @Default('bearer')
    @JsonKey(name: 'token_type')
    @HiveField(1)
    String? tokenType,
    @JsonKey(name: 'expires_in') @HiveField(2) int? expiresIn,
    @JsonKey(name: 'refresh_token') @HiveField(3) String? refreshToken,
    @JsonKey(name: 'scope') @HiveField(4) String? scope,
  }) = _Token;

  /// Factory constructor to create an instance of [Token] from a JSON map.
  ///
  /// This constructor is used for deserialization and is automatically
  /// generated by the `freezed` package.
  factory Token.fromJson(Map<String, Object?> json) => _$TokenFromJson(json);
}
